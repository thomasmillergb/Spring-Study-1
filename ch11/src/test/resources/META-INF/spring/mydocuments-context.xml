<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
	  http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
    http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
    http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
  
  <context:component-scan base-package="com.apress.isf.spring"/>
  
  <!-- Active MQ -->
  <bean id="activemqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"
          p:brokerURL="tcp://localhost:61616"/>
 
  <!-- JMS Template -->
  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <constructor-arg name="connectionFactory" ref="activemqConnectionFactory"/>
    <property name="defaultDestinationName" value="mydocumentsQueue" />
  </bean>
  
  <!-- JMS Listener -->
  <jms:listener-container connection-factory="activemqConnectionFactory"
          acknowledge="auto" container-type="default">
      <jms:listener destination="mydocumentsQueue" ref="JMSConsumer" 
                  method="onMessage"/>
  </jms:listener-container>
  
  <!-- RabbitMQ -->
  <rabbit:connection-factory id="rabbitConnectionFactory" host="localhost"/>
  <rabbit:admin connection-factory="rabbitConnectionFactory"/>
  <rabbit:template id="rabbitTemplate" connection-factory="rabbitConnectionFactory" routing-key="mydocumentsQueue"/>
  <rabbit:listener-container connection-factory="rabbitConnectionFactory">
    <rabbit:listener ref="rabbitmqConsumer" queues="mydocumentsQueue"/>
  </rabbit:listener-container>
  <rabbit:queue name="mydocumentsQueue"/>
  
  <!-- JDBC -->
  <jdbc:embedded-database id="dataSource">
    <jdbc:script location="classpath:/META-INF/data/schema.sql" />
    <jdbc:script location="classpath:/META-INF/data/data.sql" />
  </jdbc:embedded-database>
  
  <bean id="query" class="java.lang.String">
    <constructor-arg>
      <value>
        select d.documentId, d.name, d.location, d.description as doc_desc,
        d.typeId, d.created, d.modified,
        t.name as type_name, t.description as type_desc, t.extension from
        documents d
        join types t
        on d.typeId = t.typeId
      </value>
    </constructor-arg>
  </bean>
  
  <bean id="find" class="java.lang.String">
    <constructor-arg>
      <value>
        select d.documentId, d.name, d.location, d.description as doc_desc,
        d.typeId, d.created, d.modified,
        t.name as type_name, t.description as type_desc, t.extension from
        documents d
        join types t
        on d.typeId = t.typeId
        where d.documentId = ?
      </value>
    </constructor-arg>
  </bean>
  
  <bean id="insert" class="java.lang.String">
    <constructor-arg>
      <value>
        insert into documents (documentId,name,location,description, typeId, created, modified)
        values (?,?,?,?,?,?,?)
      </value>
    </constructor-arg>
  </bean>
  
  <bean id="update" class="java.lang.String">
    <constructor-arg>
      <value>
        update documents 
        set name = ?,
        location = ?,
        description = ?, 
        typeId = ?,
        modified = ?
        where documentId = ?
      </value>
    </constructor-arg>
  </bean>
</beans>
