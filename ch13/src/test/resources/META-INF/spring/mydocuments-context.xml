<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<context:component-scan base-package="com.apress.isf.spring" />
  <context:property-placeholder location="email.properties" />
  
	<!-- EMAIL -->
	<bean id="email" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${email.host}" />
		<property name="port" value="${email.port}" />
		<property name="username" value="${email.username}" />
		<property name="password" value="${email.password}" />

		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

  <!-- Task Scheduling -->
  <task:annotation-driven/>
  
	<!-- JDBC -->
	<jdbc:embedded-database id="dataSource">
		<jdbc:script location="classpath:/META-INF/data/schema.sql" />
		<jdbc:script location="classpath:/META-INF/data/data.sql" />
	</jdbc:embedded-database>

	<bean id="sql" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="query">
					<value>
						select d.documentId, d.name, d.location, d.description as doc_desc,
						d.typeId, d.created, d.modified,
						t.name as type_name, t.description as type_desc, t.extension from
						documents d
						join types t
						on d.typeId = t.typeId
					</value>
				</entry>
				<entry key="find">
					<value>
						select d.documentId, d.name, d.location, d.description as doc_desc,
						d.typeId, d.created, d.modified,
						t.name as type_name, t.description as type_desc, t.extension from
						documents d
						join types t
						on d.typeId = t.typeId
						where d.documentId = ?
					</value>
				</entry>
				<entry key="type-name">
          <value>
            select d.documentId, d.name, d.location, d.description as doc_desc,
            d.typeId, d.created, d.modified,
            t.name as type_name, t.description as type_desc, t.extension from
            documents d
            join types t
            on d.typeId = t.typeId
            where t.name = ?
          </value>
        </entry>
				<entry key="insert">
					<value>
						insert into documents (documentId,name,location,description, typeId,
						created, modified)
						values (?,?,?,?,?,?,?)
					</value>
				</entry>
				<entry key="update">
					<value>
						update documents set name = ?, location = ?, description = ?, typeId =
						?,modified = ?
						where documentId = ?
					</value>
				</entry>
				<entry key="delete">
					<value>
						delete from documents
						where documentId = ?
					</value>
				</entry>
			</map>
		</constructor-arg>
	</bean>

</beans>
